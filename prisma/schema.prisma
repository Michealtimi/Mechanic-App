generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String            @id @default(uuid())
  email             String            @unique
  password          String
  role              Role              @default(CUSTOMER)
  status            String            @default("PENDING")
  shopName          String?
  location          String?
  skills            String[]
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  experienceYears   Int?
  profilePictureUrl String?
  bio               String?
  certificationUrls String[]
  CustomerBookings  Booking[]         @relation("CustomerBookings")
  MechanicBookings  Booking[]         @relation("MechanicBookings")
  mechanicServices  MechanicService[]
  deletedAt         DateTime?
}

model MechanicService {
  id            String    @id @default(uuid())
  title         String
  description   String?
  price         Float
  estimatedTime String?
  availability  String?
  mechanicId    String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
  mechanic      User      @relation(fields: [mechanicId], references: [id])
}

model Booking {
  id          String          @id @default(uuid())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  customerId  String
  mechanicId  String
  serviceId   String
  status      BookingStatus   @default(PENDING)
  scheduledAt DateTime
  customer    User            @relation("CustomerBookings", fields: [customerId], references: [id])
  mechanic    User            @relation("MechanicBookings", fields: [mechanicId], references: [id])
  service     MechanicService @relation(fields: [serviceId], references: [id])
}

enum Role {
  ADMIN
  MECHANIC
  CUSTOMER
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum BookingStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
}
